https://github.com/khan4019/angular-interview-questions/tree/master
https://www.code-sample.com/2016/06/angular-2-interview-questions-and.html
https://www.tutorialspoint.com/angular2/angular2_interview_questions.htm
https://github.com/Yonet/Angular-Interview-Questions
https://www.codeproject.com/Articles/1071285/Latest-TypeScript-Interview-Questions-for-Beginner
https://www.codeproject.com/Articles/1169073/Angular-Interview-Questions
===================================================================================================================
What are the differences between AngularJS (angular 1.x) and Angular (Angular 2.x and beyond)?
https://medium.com/@angularminds/comparison-between-angular-1-vs-angular-2-vs-angular-4-62fe79c379e3
10 major differences are
1-AngularJS architecture is based on MVC . Angular 2 architecture is based on service/controller 
	Upgrade of the version from 2.0 to 4.0 has reduced it’s bundled file size by 60%.
2-Angular JS use JavaScript. Angular v2.0 angular team used typescript
 controller concept which was present in Angular v1.0 is eliminated in Angular v2.0. Angular v2.0 has changed to component based UI.
 Angular 2.0 has made it possible to accomplish the native applications for a mobile platform like React Native. 
 Angular 2.0 provides application layer and the rendering layer. 
 view engine introduced Angular 4, which decreased the size of the generated code using the Ahead of Time (AOT) manner.
  Angular Ahead-of-Time (AOT) compiler converts your Angular HTML and TypeScript code into efficient JavaScript code during the build phase before the browser downloads and runs that code.
===================================================================================================================
What is a component? Why would you use it?
Components are the most basic building block of an UI in an Angular application. 
An Angular application is a tree of Angular components. 
Angular components are a subset of directives. 
Unlike directives, components always have a template and only one component can be instantiated per an element in a template.
Components are basically classes that interact with the .html file of the component, which gets displayed on the browser.
it divides angular into different smaller parts
one or more components forms one module which can be displayed as html in angular.
it is used to split the specific functionality to smaller parts.
app component which is created by default will always remain the parent and the next components created will form the child component.
A component must belong to an NgModule in order for it to be usable by another component or application
===================================================================================================================
What is the minimum definition of a component?
The absolute minimal configuration for a @Component in angular is a template. 
Both template properties are set to optional because you have to define either template or templateUrl.
When you don't define them, you will get an exception like this;
No template specified for component 'ComponentName'
A selector property is not required, as you can also use your components in a route.
===================================================================================================================
What is a module, and what does it contain?
a module is a mechanism to group components, directives, pipes and services that are related, in such a way that can be combined with other modules to create an application
Modules allow you to manage your components to bring modularity to your app.
===================================================================================================================
What is a service, and when will you use it?
Angular services are singleton objects which get instantiated only once during the lifetime of an application.
They contain methods that maintain data throughout the life of an application.
The main objective of a service is to organize and share business logic, models, or data and functions with different components of an Angular application.
An Angular service is a stateless object and provides some very useful functions.
These functions can be invoked from any component of Angular, like Controllers, Directives, etc
===================================================================================================================
What is a promise? Explain it laymen's terms.
A promise represents the eventual result of an asynchronous operation.
that basically means is that you wont be able to access the result of that async operation immediately.you have to wait until the promise has been settled.
day to day example: when you were younger and told your mom "I promise to take out the trash". That meant you will fulfill your promise and throw out the trash some time later in the day. That could be in a couple of minutes or a couple of hours.
var promise = new Promise(function(resolve, reject) {
  // do a thing, possibly async, then…
  if (/* everything turned out fine */) {
    resolve("Stuff worked!");
  }
  else {
    reject(Error("It broke"));
  }
});
promise.then(function(result) {
  console.log("Promise worked");
}, function(err) {
  console.log("Something broke");
});
The promise constructor takes in one argument:  callback function with two parameters resolve and reject.
there are 3 states to a promise:

pending: awaiting promise response
resolve : promise has successfully returned
reject: failure occurred

complete example
called function
const loadImage = url => {
  return new Promise(function(resolve, reject) {

    //Open a new XHR
    var request = new XMLHttpRequest();
    request.open('GET', url);

    // When the request loads, check whether it was successful
    request.onload = function() {
      if (request.status === 200) {
        // If successful, resolve the promise
        resolve(request.response);
      } else {
        // Otherwise, reject the promise
        reject(Error('An error occurred while loading image. error code:' + request.statusText));
      }
    };
    request.send();
  });
};
caller function
const embedImage = url => {
  loadImage(url).then(function(result) {
      const img = new Image();
      var imageURL = window.URL.createObjectURL(result);
      img.src = imageURL;
      document.querySelector('body').appendChild(img);
    },
    function(err) {
      console.log(err);
    });
}
===================================================================================================================
What are the lifecycle hooks for components and directives?
ngOnChanges()-when Angular (re)sets data-bound input properties. receives a SimpleChanges object of current and previous property values
ngOnInit()-Initialize the directive/component after Angular first displays the data-bound properties
ngDoCheck()-Detect and act upon changes that Angular can't or won't detect on its own.
ngAfterContentInit()-after Angular projects external content into the component's view
ngAfterContentChecked()-after Angular checks the content projected into the directive/component.
ngAfterViewInit()-after Angular initializes the component's views and child views / the view that a directive is in.
ngAfterViewChecked()-after Angular checks the component's views 
ngOnDestroy()- before Angular destroys the directive/component. 
		Unsubscribe Observables and detach event handlers to avoid memory leaks.
===================================================================================================================
What are pipes? Give me an example.
pipe is a kind of transformer.
A pipe takes in data as input and transforms it to a desired output
example 
Async ---   <li *ngFor="let item of data | async">
currency ---
			{{ price | currency:'CAD' }}
			{{ price | currency:'USD':true }}
			{{ price | currency:'EUR':false:3.2-2 }}
date ---
{{ someDate | date:'medium' }}
{{ someDate | date:'fullDate' }}
{{ someDate | date:'yy' }}
{{ someDate | date:'Hm' }}
Json---
{{ someObject | json }}
uppercase, lowercase, percentage, slice
custom pipe
import { Pipe, PipeTransform } from '@angular/core';

@Pipe({name: 'reverseStr'})
export class ReverseStr implements PipeTransform {
  transform(value: string): string {
    let newStr: string = "";
    for (var i = value.length - 1; i >= 0; i--) {
      newStr += value.charAt(i);
    }
    return newStr;
  }
}
===================================================================================================================
What are the differences between reactive forms and template driven forms?
Template Driven Forms Features-
Easier to use
Suitable for simple scenarios
Uses Two way data binding(using [(NgModel)] syntax)
Minimal component code
Automatic track of the form and its data(handled by Angular)
Unit testing is challenge

Reactive Forms Features-
Easier Unit testing
More flexible,So Handles any complex scenarios.
Reactive transformations can be made possible such as Adding elements dynamically
No data binding is done(Immutable data model preferred by most developers)
More component code and less HTML markup
https://blog.angular-university.io/introduction-to-angular-2-forms-template-driven-vs-model-driven/
===================================================================================================================
What is a dumb, or presentation, component? What are the benefits of using dumb components?
smart component - also know sometimes as application-level components, container components or controller components
it interacts with service and is  kind of large component, interact with service also
Presentation Components: also known sometimes as pure components or dumb components
only used for showing data template by using @input and @ Output
===================================================================================================================
How do components communicate with each other?
Passing the reference of one component to another(Input)
Communication through parent component(EventEmitter)
Communication through Service
===================================================================================================================
How would you use http to load data from server?
===================================================================================================================
How do you create routes?
===================================================================================================================
How can you get the current state of a route?
===================================================================================================================
How do you create two-way data binding?
===================================================================================================================
How do you load external modules?
===================================================================================================================
How would you display form validation errors?
===================================================================================================================
Which lifecycle hook would you use to unsubscribe an observable?
===================================================================================================================
ow are services injected to your application?
Dependency Injection (DI) is a way to create objects that depend upon other objects. A Dependency Injection system supplies the dependent objects (called the dependencies) when it creates an instance of an object.
@Injectable()
export class HeroService {
  getHeroes() { return HEROES; }
}
inject dependency into constructor of component
constructor(heroService: HeroService) {
    this.heroes = heroService.getHeroes();
  }
  Component injectors are independent of each other and each of them creates its own instances of the component-provided services.
   when Angular creates a new instance of a component that has @Component.providers, it also creates a new child injector for that instance
   When Angular destroys one of these component instance, it also destroys the component's injector and that injector's service instances
===================================================================================================================
How would you create route parameters and access them from a component?
{ path: 'product-details/:id', component: ProductDetails }
<a *ngFor="let product of products"
  [routerLink]="['/product-details', product.id]">
  {{ product.name }}
</a>
goToProductDetails(id) {
  this.router.navigate(['/product-details', id]);
}
===================================================================================================================
Why would you use Angular instead of another framework, e.g., React?
Angular is a TypeScript-based Javascript framework
Angular relies on TypeScript. This offers more consistency in related examples and open source projects 
Angular is a framework rather than a library because it provides strong opinions as to how your application should be structured and also has more functionality out of the box.
React is described as “a JavaScript library for building user interfaces”
	not as a single-page application, 
	React is also used by Airbnb, Uber, Netflix, Twitter, Pinterest, Reddit, Udemy, Wix, Paypal, Imgur, Feedly, Stripe, Tumblr, Walmart
	React focuses on the use of Javascript ES6
	Their libraries can be paired to all kinds of packages

Building UIs is hard, because there are states everywhere data changing over time entails complexity
the status of the complete application is stored in an object tree within a single store. This helps with debugging the application, and some functionalities are easier to implement.
A big difference between React and Angular is one-way vs. two-way binding. Angular’s two-way-binding changes the model state when the UI element (e.g. a user input) is updated. React only goes one way: it updates the model first and then it renders the UI element
You can work with React or Vue by simply adding the Javascript library to the source code. This is not possible with Angular because of its use of TypeScript.
React and Vue give you more control to size an application by selecting only the things which are really necessary. They offer more flexibility to shift from an SPA to microservices using parts of a former application. Angular work best for SPA, as it is probably too bloated to be used for microservices.
===================================================================================================================
What is the difference between an observable and a promise?

A Promise handles a single event when an async operation completes or fails.
An Observable is like a Stream (in many languages) and allows to pass zero or more events where the callback is called for each event.
Observable also has the advantage over Promise to be cancelable
If the result of an HTTP request to a server or some other expensive async operation isn't needed anymore, the Subscription of an Observable allows to cancel the subscription, while a Promise will eventually call the success or failed callback even when you don't need the notification or the result it provides anymore.

Promises vs Observables

promise:
returns a single value
not cancellable
more readable code with try/catch and async/await
observable
works with multiple values over time
cancellable
supports map, filter, reduce and similar operators
use Reactive Extensions (RxJS)
an array whose items arrive asynchronously over time

Promise based approach
@Injectable()
export class WikipediaService {
  constructor(private jsonp: Jsonp) {}

  search (term: string) {
    var search = new URLSearchParams()
    search.set('action', 'opensearch');
    search.set('search', term);
    search.set('format', 'json');
    return this.jsonp
                .get('http://en.wikipedia.org/w/api.php?callback=JSONP_CALLBACK', { search })
                .toPromise()
                .then((response) => response.json()[1]);
  }
}
export class AppComponent {
  items: Array<string>;

  constructor(private wikipediaService: WikipediaService) {}

  search(term) {
    this.wikipediaService.search(term)
                         .then(items => this.items = items);
  }
}

Observable
export class App {
  items: Array<string>;
  term = new FormControl();
  constructor(private wikipediaService: WikipediaService) {
    this.term.valueChanges
              .debounceTime(400)        // wait for 400ms pause in events
              .distinctUntilChanged()   // ignore if next search term is same as previous
              .subscribe(term => this.wikipediaService.search(term).then(items => this.items = items));
  }
}

===================================================================================================================
What is the difference between a component and a directive?

Component
is also a type of directive with template,styles and logic part which is most famous type of directive among all in angular2. In this type of directive you can use other directives whether it is custom or builtin in the @component annotation like following:
@Component({
    selector: "my-app"
    directives: [custom_directive_here]
})

Attribute directives
are used to give custom behaviour or style to the existing elements by applying some functions/logics. like ngStyle is a attribute directive to give style dynamically to the elements
Structural directives
like *ngFor and *ngIf used for changes the DOM layout by adding and removing DOM elements. 
===================================================================================================================
Why would you use typescript aka benefits of typescript?
===================================================================================================================
Why different life cycle hooks are needed for a component/directive?
===================================================================================================================
Why does angular use rxjs?
===================================================================================================================
What is the purpose of using zone.js?
===================================================================================================================
What is the difference between ngOnInit() and the constructor() of a component?
===================================================================================================================
When will ngOnInit() be called? How would you make use of ngOnInit()?
===================================================================================================================
What are the benefits of using formBuilder?
===================================================================================================================
Intermediate Level
===================================================================================================================
How will you protect a route for authorized user only?
===================================================================================================================
What is a custom pipe and how will you use it?
===================================================================================================================
What is a structural directive?
===================================================================================================================
What is the difference between RouterModule.forRoot() vs RouterModule.forChild()? Why is it important?
===================================================================================================================
What is the difference between a module's forRoot() and forChild() methods and why do you need it?
===================================================================================================================
What's the difference between dirty, touched, and pristine on a form element?
===================================================================================================================
What is an async pipe? What kind of data can be used with async pipe?
===================================================================================================================
What is injectable? Give me some example.
===================================================================================================================
What is a pure pipe?
===================================================================================================================
How will you create two-way data binding in Angular?
===================================================================================================================
How do components communicate with each other?
===================================================================================================================
How do you decide to create a new NgModule?
===================================================================================================================
How will you inject custom header in your http call?
===================================================================================================================
How do you identify a structural directive in html?
===================================================================================================================
How would you select a custom component to style it?
===================================================================================================================
How would you select all the child components' elements?
===================================================================================================================
How would you cache an observable data?
===================================================================================================================
How would you save data from a form control?
===================================================================================================================
How Event Emitters works in Angular?
===================================================================================================================
How do you mock a service to inject in a unit test?
===================================================================================================================
Tell me about feature module and shared module?
===================================================================================================================
What would you not put in a shared module?
===================================================================================================================
Why angular uses decorator?
===================================================================================================================
What is async validation and how is it done?
===================================================================================================================
Why do you need type definitions?
===================================================================================================================
Which components will be notified when an event is emitted?
===================================================================================================================
Why would you export from ngModule?
===================================================================================================================
Why is it bad if SharedModule provides a service to a lazy loaded module?
===================================================================================================================
Can you explain the difference between ActivatedRoute and RouterState?
===================================================================================================================
Which service will you put in the module and why?
===================================================================================================================
What is a factory Component?
===================================================================================================================
What is lazy loading and why will you use it?
===================================================================================================================
What is Ahead of time (AOT) compilation and why will you use it?
===================================================================================================================
What are some of the Angular Style Guide suggestions you follow on your code? Why?
===================================================================================================================
What is wildcard state?
===================================================================================================================
How do you put animation between two states? 
===================================================================================================================
What would be a good use for NgZone service?
===================================================================================================================
How would you protect a component being activated through the router?
===================================================================================================================
How would you insert an embedded view from a prepared TemplateRef?
===================================================================================================================
What is attribute directive and why will you use it?
===================================================================================================================
How will you intercept http to inject header to each http call?
===================================================================================================================
How would you create a component to display error messages throughout your application?
===================================================================================================================
How will you parallelize multiple observable call?
===================================================================================================================
How will you put one async call before another?
===================================================================================================================
How can you use web worker in angular app?
===================================================================================================================
What tools would you use to find a performance issue in your code?
===================================================================================================================
What are some ways you may improve your website's scrolling performance?
===================================================================================================================
Explain the difference between layout, painting and compositing.
===================================================================================================================
How can you cancel a router navigation?
===================================================================================================================
How would you animate routing?
===================================================================================================================
How would you cancel a promise on which you are waiting?
===================================================================================================================
When does a lazy loaded module is loaded?
===================================================================================================================
Why angular uses url segment?
===================================================================================================================
How will you make angular app secure?
===================================================================================================================
How will you localize numbers currencies and dates?
===================================================================================================================
What is the best way to use translation in your app?
===================================================================================================================
How will you setup different environment build differently for your app
===================================================================================================================
How will you use scss or css preprocessing with your application?	
===================================================================================================================
How will you optimize image/svg in your angular app?
===================================================================================================================
How would you make sure an api call that needs to be called only once but with multiple conditions? Example: if you need to get some data in multiple routes but, once you get it, you can reuse it in the routes that needs it, therefor no need to make another call to your backend apis.
===================================================================================================================
If you need to respond to two different Observable/Subject with one callback function, how would you do it? (ex: if you need to change the url through route parameters and with prev/next buttons).
===================================================================================================================
Why unsubscribing is important?
===================================================================================================================
What is the difference between map and flatmap?
===================================================================================================================
Whare are the different ways you can create an Observable?
===================================================================================================================
What is forkJoin, zip, share?
===================================================================================================================
Difference between hot and cold observables.
===================================================================================================================
How would you debug a typescript file?
===================================================================================================================
How do you implement interface in typescript?
===================================================================================================================
How would you call base class constructor from child class in typescript?
===================================================================================================================
What is typescript language service?
===================================================================================================================
How to declare a custom type?
===================================================================================================================
what are some disadvantages of typescirpt?
===================================================================================================================
Why would you use angular cli?
===================================================================================================================
How would you run unit test?
===================================================================================================================
How do you create application to use scss?
===================================================================================================================
How to inject base href?
===================================================================================================================
How would you extract webpack config from angular cli project?
===================================================================================================================
What is the use of codelyzer?
===================================================================================================================
Will you use Angular Material2?
===================================================================================================================
How would you set different config in different deployment server?
===================================================================================================================
What do you know about ES6?
===================================================================================================================
What is ngUpgrage? Do you know how you can run angularJS and angular side by side?
